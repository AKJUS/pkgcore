#!/bin/bash
# ebuild-daemon.lib; daemon lib code.
# Copyright 2005-2011 Brian Harring <ferringb@gmail.com>
# License BSD/GPL2


# ask the python side to display sandbox complaints.
request_sandbox_summary()
{
	local line
	ebd_write_line "request_sandbox_summary ${SANDBOX_LOG}"
	ebd_read_line line
	while [[ $line != end_sandbox_summary ]]; do
		echo "$line"
		ebd_read_line line
	done
}

internal_inherit()
{
	local line
	if [[ $# != 1 ]]; then
		die "internal_inherit accepts one arg, requested eclass location.  $* is a bit much"
	fi
	if [[ -n ${PKGCORE_PRELOADED_ECLASSES[$1]} ]]; then
		${PKGCORE_PRELOADED_ECLASSES[$1]}
		return
	fi
	ebd_write_line "request_inherit $1"
	ebd_read_line line
	if [[ $line == path ]]; then
		ebd_read_line line
		source "${line}" >&2 || die "failed sources inherit: ${line}"
	elif [[ $line == transfer ]]; then
		ebd_read_line line
		eval "$line" || die "failed evaluating eclass $1 on an inherit transfer"
	elif [[ $line == failed ]]; then
		die "inherit for $1 failed"
	else
		die "unknown inherit command from pythonic side, '$line' for eclass $1"
	fi
}

source_profiles()
{
	local line
	ebd_write_line request_profiles
	ebd_read_line line
	while [[ $line != end_request ]]; do
		if [[ $line == path ]]; then
			ebd_read_line line
			source "${line}" >&2
		elif [[ $line == transfer ]]; then
			ebd_read_line line
			eval "$line" || die "failed evaluating profile bashrc: ${line}"
		else
			ebd_write_line "failed"
			die "unknown profile bashrc transfer mode from pythonic side, '$line'"
		fi
		ebd_write_line "next"
		ebd_read_line line
	done
}

:
